import React, { useState, useRef, useEffect } from 'react';
import { Send, Bot, User, X, Minimize2, Maximize2, Sparkles } from 'lucide-react';

interface ChatMessage {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
  suggestions?: string[];
}

interface AIChatProps {
  isOpen: boolean;
  onClose: () => void;
  currentLanguage: string;
}

export default function AIChat({ isOpen, onClose, currentLanguage }: AIChatProps) {
  const [messages, setMessages] = useState<ChatMessage[]>([
    {
      id: '1',
      text: currentLanguage === 'en' 
        ? 'ЁЯЩП Namaste! I\'m YatraBuddy, your travel bridge assistant. I solve real problems by connecting your existing apps - IRCTC, Google Maps, payment wallets, hotel bookings - all in one platform. Plus, I\'m loaded with cultural insights about India\'s heritage. Ready to bridge your travel gaps?'
        : 'ЁЯЩП рдирдорд╕реНрддреЗ! рдореИрдВ рдпрд╛рддреНрд░рд╛рдмрдбреА рд╣реВрдБ, рдЖрдкрдХрд╛ рдпрд╛рддреНрд░рд╛ рдмреНрд░рд┐рдЬ рд╕рд╣рд╛рдпрдХред рдореИрдВ рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рдРрдкреНрд╕ - IRCTC, Google Maps, рднреБрдЧрддрд╛рди рд╡реЙрд▓реЗрдЯ, рд╣реЛрдЯрд▓ рдмреБрдХрд┐рдВрдЧ - рд╕рднреА рдХреЛ рдПрдХ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдореЗрдВ рдЬреЛрдбрд╝рдХрд░ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХрд╛ рд╕рдорд╛рдзрд╛рди рдХрд░рддрд╛ рд╣реВрдБред рд╕рд╛рде рд╣реА, рдореИрдВ рднрд╛рд░рдд рдХреА рдзрд░реЛрд╣рд░ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рд╕реЗ рднрд░рд╛ рд╣реВрдБред рдЕрдкрдиреА рдпрд╛рддреНрд░рд╛ рдХреА рдЦрд╛рдИ рдХреЛ рдкрд╛рдЯрдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?',
      isBot: true,
      timestamp: new Date(),
      suggestions: currentLanguage === 'en' 
        ? ['Connect my IRCTC account', 'Bridge payment apps', 'Show heritage sites in Rajasthan', 'Solve booking problems']
        : ['рдореЗрд░рд╛ IRCTC рдЦрд╛рддрд╛ рдХрдиреЗрдХреНрдЯ рдХрд░реЗрдВ', 'рднреБрдЧрддрд╛рди рдРрдкреНрд╕ рдмреНрд░рд┐рдЬ рдХрд░реЗрдВ', 'рд░рд╛рдЬрд╕реНрдерд╛рди рдореЗрдВ рдзрд░реЛрд╣рд░ рд╕реНрдерд▓ рджрд┐рдЦрд╛рдПрдВ', 'рдмреБрдХрд┐рдВрдЧ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХрд╛ рд╕рдорд╛рдзрд╛рди рдХрд░реЗрдВ']
    }
  ]);
  const [input, setInput] = useState('');
  const [isMinimized, setIsMinimized] = useState(false);
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const culturalDatabase = {
    en: {
      heritage: [
        "The Taj Mahal represents the pinnacle of Mughal architecture, built by Emperor Shah Jahan as a symbol of eternal love. The best time to visit is during sunrise when the marble changes colors beautifully.",
        "Hampi's ruins tell the story of the mighty Vijayanagara Empire. The stone chariot at Vittala Temple is a masterpiece that showcases ancient Indian craftsmanship.",
        "Khajuraho temples demonstrate the architectural brilliance of the Chandela dynasty, with intricate sculptures that celebrate life, love, and spirituality."
      ],
      festivals: [
        "Diwali, the Festival of Lights, symbolizes the victory of light over darkness. Each region celebrates with unique traditions - from rangoli art to traditional sweets.",
        "Holi, the Festival of Colors, celebrates spring's arrival and the triumph of good over evil. Mathura and Vrindavan offer the most authentic celebrations.",
        "Durga Puja in Bengal is not just a festival but a cultural phenomenon, showcasing art, literature, and community bonding at its finest."
      ],
      experiences: [
        "A sunrise boat ride on the Ganges in Varanasi offers a profound spiritual experience, witnessing ancient rituals that have continued for thousands of years.",
        "Exploring Kerala's backwaters on a traditional houseboat provides insight into local life while enjoying the serene natural beauty.",
        "Attending a classical music concert at the Mysore Palace during Dasara festival combines architectural grandeur with India's rich musical heritage."
      ]
    },
    hi: {
      heritage: [
        "рддрд╛рдЬ рдорд╣рд▓ рдореБрдЧрд▓ рд╕реНрдерд╛рдкрддреНрдп рдХрд▓рд╛ рдХрд╛ рд╕рд░реНрд╡реЛрдЪреНрдЪ рдирдореВрдирд╛ рд╣реИ, рдЬрд┐рд╕реЗ рд╕рдореНрд░рд╛рдЯ рд╢рд╛рд╣рдЬрд╣рд╛рдБ рдиреЗ рд╢рд╛рд╢реНрд╡рдд рдкреНрд░реЗрдо рдХреЗ рдкреНрд░рддреАрдХ рдХреЗ рд░реВрдк рдореЗрдВ рдмрдирд╡рд╛рдпрд╛ рдерд╛ред рд╕реВрд░реНрдпреЛрджрдп рдХреЗ рд╕рдордп рдЬрд╛рдирд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╣реИ рдЬрдм рд╕рдВрдЧрдорд░рдорд░ рдХреЗ рд░рдВрдЧ рдЦреВрдмрд╕реВрд░рддреА рд╕реЗ рдмрджрд▓рддреЗ рд╣реИрдВред",
        "рд╣рдореНрдкреА рдХреЗ рдЦрдВрдбрд╣рд░ рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рд╡рд┐рдЬрдпрдирдЧрд░ рд╕рд╛рдореНрд░рд╛рдЬреНрдп рдХреА рдХрд╣рд╛рдиреА рдХрд╣рддреЗ рд╣реИрдВред рд╡рд┐рдЯреНрдард▓ рдордВрджрд┐рд░ рдХрд╛ рдкрддреНрдерд░ рдХрд╛ рд░рде рдкреНрд░рд╛рдЪреАрди рднрд╛рд░рддреАрдп рд╢рд┐рд▓реНрдкрдХрд▓рд╛ рдХрд╛ рдПрдХ рдмреЗрдЬреЛрдбрд╝ рдирдореВрдирд╛ рд╣реИред",
        "рдЦрдЬреБрд░рд╛рд╣реЛ рдХреЗ рдордВрджрд┐рд░ рдЪрдВрджреЗрд▓ рд╡рдВрд╢ рдХреА рд╕реНрдерд╛рдкрддреНрдп рдкреНрд░рддрд┐рднрд╛ рдХреЛ рджрд░реНрд╢рд╛рддреЗ рд╣реИрдВ, рдЬрд┐рдирдореЗрдВ рдЬреАрд╡рди, рдкреНрд░реЗрдо рдФрд░ рдЖрдзреНрдпрд╛рддреНрдо рдХрд╛ рдЬрд╢реНрди рдордирд╛рдиреЗ рд╡рд╛рд▓реА рдЬрдЯрд┐рд▓ рдореВрд░реНрддрд┐рдпрд╛рдВ рд╣реИрдВред"
      ],
      festivals: [
        "рджреАрд╡рд╛рд▓реА, рд░реЛрд╢рдиреА рдХрд╛ рддреНрдпреЛрд╣рд╛рд░, рдЕрдВрдзрдХрд╛рд░ рдкрд░ рдкреНрд░рдХрд╛рд╢ рдХреА рд╡рд┐рдЬрдп рдХрд╛ рдкреНрд░рддреАрдХ рд╣реИред рд╣рд░ рдХреНрд╖реЗрддреНрд░ рдЕрдкрдиреА рдЕрдиреВрдареА рдкрд░рдВрдкрд░рд╛рдУрдВ рдХреЗ рд╕рд╛рде рдордирд╛рддрд╛ рд╣реИ - рд░рдВрдЧреЛрд▓реА рдХрд▓рд╛ рд╕реЗ рд▓реЗрдХрд░ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдорд┐рдард╛рдЗрдпреЛрдВ рддрдХред",
        "рд╣реЛрд▓реА, рд░рдВрдЧреЛрдВ рдХрд╛ рддреНрдпреЛрд╣рд╛рд░, рд╡рд╕рдВрдд рдХреЗ рдЖрдЧрдорди рдФрд░ рдмреБрд░рд╛рдИ рдкрд░ рдЕрдЪреНрдЫрд╛рдИ рдХреА рд╡рд┐рдЬрдп рдХрд╛ рдЬрд╢реНрди рдордирд╛рддрд╛ рд╣реИред рдордереБрд░рд╛ рдФрд░ рд╡реГрдВрджрд╛рд╡рди рд╕рдмрд╕реЗ рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рдЙрддреНрд╕рд╡ рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВред",
        "рдмрдВрдЧрд╛рд▓ рдореЗрдВ рджреБрд░реНрдЧрд╛ рдкреВрдЬрд╛ рд╕рд┐рд░реНрдл рдПрдХ рддреНрдпреЛрд╣рд╛рд░ рдирд╣реАрдВ рдмрд▓реНрдХрд┐ рдПрдХ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдШрдЯрдирд╛ рд╣реИ, рдЬреЛ рдХрд▓рд╛, рд╕рд╛рд╣рд┐рддреНрдп рдФрд░ рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдмрдВрдзрди рдХреЛ рдмреЗрд╣рддрд░реАрди рд░реВрдк рдореЗрдВ рдкреНрд░рджрд░реНрд╢рд┐рдд рдХрд░рддреА рд╣реИред"
      ],
      experiences: [
        "рд╡рд╛рд░рд╛рдгрд╕реА рдореЗрдВ рдЧрдВрдЧрд╛ рдкрд░ рд╕реВрд░реНрдпреЛрджрдп рдХреА рдирд╛рд╡ рдпрд╛рддреНрд░рд╛ рдПрдХ рдЧрд╣рд░рд╛ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЕрдиреБрднрд╡ рдкреНрд░рджрд╛рди рдХрд░рддреА рд╣реИ, рд╣рдЬрд╛рд░реЛрдВ рд╡рд░реНрд╖реЛрдВ рд╕реЗ рдЪрд▓реА рдЖ рд░рд╣реА рдкреНрд░рд╛рдЪреАрди рд░реАрддрд┐-рд░рд┐рд╡рд╛рдЬреЛрдВ рдХреЛ рджреЗрдЦрддреЗ рд╣реБрдПред",
        "рдкрд╛рд░рдВрдкрд░рд┐рдХ рд╣рд╛рдЙрд╕рдмреЛрдЯ рдкрд░ рдХреЗрд░рд▓ рдХреЗ рдмреИрдХрд╡рд╛рдЯрд░ рдХреА рдЦреЛрдЬ рд╕реНрдерд╛рдиреАрдп рдЬреАрд╡рди рдореЗрдВ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рдкреНрд░рджрд╛рди рдХрд░рддреА рд╣реИ рдФрд░ рд╢рд╛рдВрдд рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реБрдВрджрд░рддрд╛ рдХрд╛ рдЖрдирдВрдж рд▓реЗрддреА рд╣реИред",
        "рджрд╢рд╣рд░рд╛ рддреНрдпреЛрд╣рд╛рд░ рдХреЗ рджреМрд░рд╛рди рдореИрд╕реВрд░ рдкреИрд▓реЗрд╕ рдореЗрдВ рд╢рд╛рд╕реНрддреНрд░реАрдп рд╕рдВрдЧреАрдд рдХрд╛рд░реНрдпрдХреНрд░рдо рдореЗрдВ рднрд╛рдЧ рд▓реЗрдирд╛ рд╕реНрдерд╛рдкрддреНрдп рднрд╡реНрдпрддрд╛ рдХреЛ рднрд╛рд░рдд рдХреА рд╕рдореГрджреНрдз рд╕рдВрдЧреАрдд рдкрд░рдВрдкрд░рд╛ рдХреЗ рд╕рд╛рде рдЬреЛрдбрд╝рддрд╛ рд╣реИред"
      ]
    }
  };

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const generateBotResponse = (userInput: string): string => {
    // const input = userInput.toLowerCase();
    // const lang = currentLanguage as 'en' | 'hi';
    
    // // Integration and bridge-related responses
    // if (input.includes('connect') || input.includes('integration') || input.includes('bridge') || input.includes('рдХрдиреЗрдХреНрдЯ') || input.includes('рдПрдХреАрдХрд░рдг')) {
    //   const responses = currentLanguage === 'en' ? [
    //     'I can help you connect your existing travel apps! Currently, we support IRCTC for trains, Google Maps for navigation, Paytm/PhonePe for payments, and many more. Which app would you like to connect first?',
    //     'Great question about integrations! Our bridge platform connects with 15+ popular apps. You can link your IRCTC account for seamless train booking, sync with Google Maps for smart routing, and use your existing payment apps. Want me to guide you through the setup?',
    //     'Connecting your apps saves 60% of booking time! We securely bridge your existing accounts - IRCTC, MakeMyTrip, OYO, Google Maps, payment wallets. Your data stays with original apps, we just create smart connections.'
    //   ] : [
    //     'рдореИрдВ рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рдпрд╛рддреНрд░рд╛ рдРрдкреНрд╕ рдХреЛ рдХрдиреЗрдХреНрдЯ рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ! рд╡рд░реНрддрдорд╛рди рдореЗрдВ, рд╣рдо рдЯреНрд░реЗрди рдХреЗ рд▓рд┐рдП IRCTC, рдиреЗрд╡реАрдЧреЗрд╢рди рдХреЗ рд▓рд┐рдП Google Maps, рднреБрдЧрддрд╛рди рдХреЗ рд▓рд┐рдП Paytm/PhonePe рдФрд░ рдХрдИ рдФрд░ рдХрд╛ рд╕рдорд░реНрдерди рдХрд░рддреЗ рд╣реИрдВред рдЖрдк рдкрд╣рд▓реЗ рдХреМрди рд╕рд╛ рдРрдк рдХрдиреЗрдХреНрдЯ рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?',
    //     'рдПрдХреАрдХрд░рдг рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдмреЗрд╣рддрд░реАрди рд╕рд╡рд╛рд▓! рд╣рдорд╛рд░рд╛ рдмреНрд░рд┐рдЬ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо 15+ рд▓реЛрдХрдкреНрд░рд┐рдп рдРрдкреНрд╕ рдХреЗ рд╕рд╛рде рдЬреБрдбрд╝рддрд╛ рд╣реИред рдЖрдк рдирд┐рд░реНрдмрд╛рдз рдЯреНрд░реЗрди рдмреБрдХрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рдЕрдкрдирд╛ IRCTC рдЦрд╛рддрд╛ рд▓рд┐рдВрдХ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рд╕реНрдорд╛рд░реНрдЯ рд░реВрдЯрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП Google Maps рдХреЗ рд╕рд╛рде рд╕рд┐рдВрдХ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рдХреНрдпрд╛ рдЖрдк рдЪрд╛рд╣рддреЗ рд╣реИрдВ рдХрд┐ рдореИрдВ рдЖрдкрдХреЛ рд╕реЗрдЯрдЕрдк рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдЧрд╛рдЗрдб рдХрд░реВрдВ?',
    //     'рдЕрдкрдиреЗ рдРрдкреНрд╕ рдХреЛ рдХрдиреЗрдХреНрдЯ рдХрд░рдирд╛ 60% рдмреБрдХрд┐рдВрдЧ рд╕рдордп рдмрдЪрд╛рддрд╛ рд╣реИ! рд╣рдо рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рдЦрд╛рддреЛрдВ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдЬреЛрдбрд╝рддреЗ рд╣реИрдВ - IRCTC, MakeMyTrip, OYO, Google Maps, рднреБрдЧрддрд╛рди рд╡реЙрд▓реЗрдЯред рдЖрдкрдХрд╛ рдбреЗрдЯрд╛ рдореВрд▓ рдРрдкреНрд╕ рдХреЗ рд╕рд╛рде рд░рд╣рддрд╛ рд╣реИ, рд╣рдо рдХреЗрд╡рд▓ рд╕реНрдорд╛рд░реНрдЯ рдХрдиреЗрдХреНрд╢рди рдмрдирд╛рддреЗ рд╣реИрдВред'
    //   ];
    //   return responses[Math.floor(Math.random() * responses.length)];
    // }

    // // Problem-solving responses
    // if (input.includes('problem') || input.includes('issue') || input.includes('difficulty') || input.includes('рд╕рдорд╕реНрдпрд╛') || input.includes('рдкрд░реЗрд╢рд╛рдиреА')) {
    //   const responses = currentLanguage === 'en' ? [
    //     'I understand travel planning can be frustrating with multiple apps! That\'s exactly why we built this bridge platform. Instead of juggling IRCTC, hotel apps, maps, and payment apps separately, connect them all here. What specific travel problem are you facing?',
    //     'Travel problems are real! Switching between apps, re-entering details, comparing prices manually - it\'s exhausting. Our platform solves this by creating intelligent bridges between your existing apps. Tell me your biggest travel headache, and I\'ll show you how we fix it.',
    //     'You\'re not alone in facing travel app chaos! Most travelers use 5-8 different apps for one trip. We bridge them all - your IRCTC login works here, Google Maps syncs automatically, payments flow through your existing wallets. What would you like to streamline first?'
    //   ] : [
    //     'рдореИрдВ рд╕рдордЭрддрд╛ рд╣реВрдВ рдХрд┐ рдХрдИ рдРрдкреНрд╕ рдХреЗ рд╕рд╛рде рдпрд╛рддреНрд░рд╛ рдпреЛрдЬрдирд╛ рдмрдирд╛рдирд╛ рдирд┐рд░рд╛рд╢рд╛рдЬрдирдХ рд╣реЛ рд╕рдХрддрд╛ рд╣реИ! рдЗрд╕реАрд▓рд┐рдП рд╣рдордиреЗ рдпрд╣ рдмреНрд░рд┐рдЬ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдмрдирд╛рдпрд╛ рд╣реИред IRCTC, рд╣реЛрдЯрд▓ рдРрдкреНрд╕, рдореИрдкреНрд╕ рдФрд░ рднреБрдЧрддрд╛рди рдРрдкреНрд╕ рдХреЛ рдЕрд▓рдЧ-рдЕрд▓рдЧ рдЬрдЧрд▓ рдХрд░рдиреЗ рдХреЗ рдмрдЬрд╛рдп, рдЙрди рд╕рднреА рдХреЛ рдпрд╣рд╛рдВ рдХрдиреЗрдХреНрдЯ рдХрд░реЗрдВред рдЖрдк рдХрд┐рд╕ рд╡рд┐рд╢рд┐рд╖реНрдЯ рдпрд╛рддреНрд░рд╛ рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╕рд╛рдордирд╛ рдХрд░ рд░рд╣реЗ рд╣реИрдВ?',
    //     'рдпрд╛рддреНрд░рд╛ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╣реИрдВ! рдРрдкреНрд╕ рдХреЗ рдмреАрдЪ рд╕реНрд╡рд┐рдЪ рдХрд░рдирд╛, рд╡рд┐рд╡рд░рдг рдлрд┐рд░ рд╕реЗ рджрд░реНрдЬ рдХрд░рдирд╛, рдореИрдиреНрдпреБрдЕрд▓ рд░реВрдк рд╕реЗ рдХреАрдорддреЛрдВ рдХреА рддреБрд▓рдирд╛ рдХрд░рдирд╛ - рдпрд╣ рдердХрд╛рдК рд╣реИред рд╣рдорд╛рд░рд╛ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рдРрдкреНрд╕ рдХреЗ рдмреАрдЪ рдмреБрджреНрдзрд┐рдорд╛рди рдмреНрд░рд┐рдЬ рдмрдирд╛рдХрд░ рдЗрд╕реЗ рд╣рд▓ рдХрд░рддрд╛ рд╣реИред рдореБрдЭреЗ рдЕрдкрдиреА рд╕рдмрд╕реЗ рдмрдбрд╝реА рдпрд╛рддреНрд░рд╛ рдкрд░реЗрд╢рд╛рдиреА рдмрддрд╛рдПрдВ, рдФрд░ рдореИрдВ рдЖрдкрдХреЛ рджрд┐рдЦрд╛рдКрдВрдЧрд╛ рдХрд┐ рд╣рдо рдЗрд╕реЗ рдХреИрд╕реЗ рдареАрдХ рдХрд░рддреЗ рд╣реИрдВред',
    //     'рдпрд╛рддреНрд░рд╛ рдРрдк рдЕрд░рд╛рдЬрдХрддрд╛ рдХрд╛ рд╕рд╛рдордирд╛ рдХрд░рдиреЗ рдореЗрдВ рдЖрдк рдЕрдХреЗрд▓реЗ рдирд╣реАрдВ рд╣реИрдВ! рдЕрдзрд┐рдХрд╛рдВрд╢ рдпрд╛рддреНрд░реА рдПрдХ рдпрд╛рддреНрд░рд╛ рдХреЗ рд▓рд┐рдП 5-8 рдЕрд▓рдЧ-рдЕрд▓рдЧ рдРрдкреНрд╕ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддреЗ рд╣реИрдВред рд╣рдо рдЙрди рд╕рднреА рдХреЛ рдЬреЛрдбрд╝рддреЗ рд╣реИрдВ - рдЖрдкрдХрд╛ IRCTC рд▓реЙрдЧрд┐рди рдпрд╣рд╛рдВ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ, Google Maps рдЕрдкрдиреЗ рдЖрдк рд╕рд┐рдВрдХ рд╣реЛрддрд╛ рд╣реИ, рднреБрдЧрддрд╛рди рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рд╡реЙрд▓реЗрдЯ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╣реЛрддрд╛ рд╣реИред рдЖрдк рдкрд╣рд▓реЗ рдХреНрдпрд╛ рд╕реБрд╡реНрдпрд╡рд╕реНрдерд┐рдд рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?'
    //   ];
    //   return responses[Math.floor(Math.random() * responses.length)];
    // }

    // if (input.includes('heritage') || input.includes('monument') || input.includes('рдзрд░реЛрд╣рд░') || input.includes('рд╕реНрдорд╛рд░рдХ')) {
    //   const responses = culturalDatabase[lang].heritage;
    //   return responses[Math.floor(Math.random() * responses.length)];
    // }
    
    // if (input.includes('festival') || input.includes('celebration') || input.includes('рддреНрдпреЛрд╣рд╛рд░') || input.includes('рдЙрддреНрд╕рд╡')) {
    //   const responses = culturalDatabase[lang].festivals;
    //   return responses[Math.floor(Math.random() * responses.length)];
    // }
    
    // if (input.includes('experience') || input.includes('activity') || input.includes('рдЕрдиреБрднрд╡') || input.includes('рдЧрддрд┐рд╡рд┐рдзрд┐')) {
    //   const responses = culturalDatabase[lang].experiences;
    //   return responses[Math.floor(Math.random() * responses.length)];
    // }

    // // Default responses
    // const defaultResponses = currentLanguage === 'en' ? [
    //   'I\'m here to help bridge your travel planning gaps! Whether you want to connect your existing apps, solve booking problems, or discover cultural destinations, I can assist. What would you like to explore?',
    //   'Great to chat with you! As your travel bridge assistant, I can help you connect IRCTC, payment apps, maps, and more for seamless journeys. I also know tons about India\'s cultural heritage. What interests you most?',
    //   'Perfect timing! I specialize in solving real travel problems by bridging your existing apps and services. Plus, I\'m loaded with cultural insights about India\'s incredible destinations. How can I help make your travel planning easier?',
    //   'Hello! I\'m designed to be your bridge between scattered travel apps and authentic cultural experiences. Whether it\'s connecting your IRCTC account, finding heritage sites, or solving booking headaches - I\'m here to help!',
    //   'Welcome! Think of me as your travel problem-solver. I bridge the gap between multiple apps, provide cultural insights, and make planning seamless. What travel challenge can I help you tackle today?'
    // ] : [
    //   'рдореИрдВ рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛ рдпреЛрдЬрдирд╛ рдХреА рдЦрд╛рдИ рдХреЛ рдкрд╛рдЯрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ! рдЪрд╛рд╣реЗ рдЖрдк рдЕрдкрдиреЗ рдореМрдЬреВрджрд╛ рдРрдкреНрд╕ рдХреЛ рдХрдиреЗрдХреНрдЯ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реЛрдВ, рдмреБрдХрд┐рдВрдЧ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреЛ рд╣рд▓ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реЛрдВ, рдпрд╛ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЧрдВрддрд╡реНрдпреЛрдВ рдХреА рдЦреЛрдЬ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реЛрдВ, рдореИрдВ рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдЖрдк рдХреНрдпрд╛ рдЦреЛрдЬрдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?',
    //   'рдЖрдкрд╕реЗ рдмрд╛рдд рдХрд░рдХреЗ рдЦреБрд╢реА рд╣реБрдИ! рдЖрдкрдХреЗ рдпрд╛рддреНрд░рд╛ рдмреНрд░рд┐рдЬ рд╕рд╣рд╛рдпрдХ рдХреЗ рд░реВрдк рдореЗрдВ, рдореИрдВ рдЖрдкрдХреЛ рдирд┐рд░реНрдмрд╛рдз рдпрд╛рддреНрд░рд╛рдУрдВ рдХреЗ рд▓рд┐рдП IRCTC, рднреБрдЧрддрд╛рди рдРрдкреНрд╕, рдореИрдкреНрд╕ рдФрд░ рдЕрдзрд┐рдХ рдХрдиреЗрдХреНрдЯ рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдореИрдВ рднрд╛рд░рдд рдХреА рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдзрд░реЛрд╣рд░ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рднреА рдмрд╣реБрдд рдХреБрдЫ рдЬрд╛рдирддрд╛ рд╣реВрдВред рдЖрдкрдХреЛ рд╕рдмрд╕реЗ рдЬреНрдпрд╛рджрд╛ рдХреНрдпрд╛ рджрд┐рд▓рдЪрд╕реНрдкреА рд╣реИ?',
    //   'рд╕рд╣реА рд╕рдордп! рдореИрдВ рдЖрдкрдХреЗ рдореМрдЬреВрджрд╛ рдРрдкреНрд╕ рдФрд░ рд╕реЗрд╡рд╛рдУрдВ рдХреЛ рдЬреЛрдбрд╝рдХрд░ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдпрд╛рддреНрд░рд╛ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреЛ рд╣рд▓ рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╣реВрдВред рд╕рд╛рде рд╣реА, рдореИрдВ рднрд╛рд░рдд рдХреЗ рдЕрд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рдЧрдВрддрд╡реНрдпреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рд╕реЗ рднрд░рд╛ рд╣реВрдВред рдореИрдВ рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛ рдпреЛрдЬрдирд╛ рдХреЛ рдЖрд╕рд╛рди рдмрдирд╛рдиреЗ рдореЗрдВ рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?',
    //   'рдирдорд╕реНрддреЗ! рдореБрдЭреЗ рдмрд┐рдЦрд░реЗ рд╣реБрдП рдпрд╛рддреНрд░рд╛ рдРрдкреНрд╕ рдФрд░ рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЕрдиреБрднрд╡реЛрдВ рдХреЗ рдмреАрдЪ рдЖрдкрдХреЗ рдмреНрд░рд┐рдЬ рдХреЗ рд░реВрдк рдореЗрдВ рд╕реЛрдЪреЗрдВред рдЪрд╛рд╣реЗ рд╡рд╣ рдЖрдкрдХреЗ IRCTC рдЦрд╛рддреЗ рдХреЛ рдХрдиреЗрдХреНрдЯ рдХрд░рдирд╛ рд╣реЛ, рдзрд░реЛрд╣рд░ рд╕реНрдерд▓ рдЦреЛрдЬрдирд╛ рд╣реЛ, рдпрд╛ рдмреБрдХрд┐рдВрдЧ рдХреА рдкрд░реЗрд╢рд╛рдирд┐рдпреЛрдВ рдХреЛ рд╣рд▓ рдХрд░рдирд╛ рд╣реЛ - рдореИрдВ рдорджрдж рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ!',
    //   'рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдореБрдЭреЗ рдЕрдкрдиреЗ рдпрд╛рддреНрд░рд╛ рд╕рдорд╕реНрдпрд╛-рд╕рдорд╛рдзрд╛рдирдХрд░реНрддрд╛ рдХреЗ рд░реВрдк рдореЗрдВ рд╕реЛрдЪреЗрдВред рдореИрдВ рдХрдИ рдРрдкреНрд╕ рдХреЗ рдмреАрдЪ рдХреА рдЦрд╛рдИ рдХреЛ рдкрд╛рдЯрддрд╛ рд╣реВрдВ, рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реВрдВ, рдФрд░ рдпреЛрдЬрдирд╛ рдмрдирд╛рдирд╛ рдирд┐рд░реНрдмрд╛рдз рдмрдирд╛рддрд╛ рд╣реВрдВред рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХрд┐рд╕ рдпрд╛рддреНрд░рд╛ рдЪреБрдиреМрддреА рд╕реЗ рдирд┐рдкрдЯрдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?'
    // ];
    
    // return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];
     // Development stage response - simple message for all inputs
     return currentLanguage === 'en' 
     ? "I'm in developing stage, I'll be available soon" 
     : "рдореИрдВ рд╡рд┐рдХрд╛рд╕ рдЪрд░рдг рдореЗрдВ рд╣реВрдВ, рдЬрд▓реНрдж рд╣реА рдЙрдкрд▓рдмреНрдз рд╣реЛ рдЬрд╛рдКрдВрдЧрд╛";
  };

  const handleSend = () => {
    if (!input.trim()) return;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      text: input,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setIsTyping(true);

    setTimeout(() => {
      const botResponse: ChatMessage = {
        id: (Date.now() + 1).toString(),
        text: generateBotResponse(input),
        isBot: true,
        timestamp: new Date(),
        suggestions: currentLanguage === 'en' 
          ? ['Tell me more', 'Show booking options', 'Plan my itinerary', 'Local experiences nearby']
          : ['рдФрд░ рдмрддрд╛рдПрдВ', 'рдмреБрдХрд┐рдВрдЧ рд╡рд┐рдХрд▓реНрдк рджрд┐рдЦрд╛рдПрдВ', 'рдореЗрд░реА рдпрд╛рддреНрд░рд╛ рдпреЛрдЬрдирд╛ рдмрдирд╛рдПрдВ', 'рдЖрд╕рдкрд╛рд╕ рдХреЗ рд╕реНрдерд╛рдиреАрдп рдЕрдиреБрднрд╡']
      };
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1500);
  };

  if (!isOpen) return null;

  return (
    <div className={`fixed bottom-4 right-4 bg-white rounded-2xl shadow-2xl border border-gray-200 transition-all duration-300 z-50 ${
      isMinimized ? 'w-80 h-16' : 'w-96 h-[600px]'
    }`}>
      {/* Header */}
      <div className="bg-gradient-to-r from-primary-500 to-primary-600 text-white p-4 rounded-t-2xl flex items-center justify-between">
        <div className="flex items-center space-x-3">
          <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center">
            <Bot className="h-5 w-5" />
          </div>
          <div>
            <h3 className="font-semibold">YatraBuddy</h3>
            <p className="text-xs opacity-90">
              {currentLanguage === 'en' ? 'AI Cultural Guide' : 'AI рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдЧрд╛рдЗрдб'}
            </p>
          </div>
          <div className="flex items-center space-x-1">
            <Sparkles className="h-3 w-3 animate-pulse" />
            <span className="text-xs">Online</span>
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <button 
            onClick={() => setIsMinimized(!isMinimized)}
            className="text-white/80 hover:text-white transition-colors"
          >
            {isMinimized ? <Maximize2 className="h-4 w-4" /> : <Minimize2 className="h-4 w-4" />}
          </button>
          <button 
            onClick={onClose}
            className="text-white/80 hover:text-white transition-colors"
          >
            <X className="h-4 w-4" />
          </button>
        </div>
      </div>

      {!isMinimized && (
        <>
          {/* Messages */}
          <div className="h-96 overflow-y-auto p-4 space-y-4">
            {messages.map((message) => (
              <div key={message.id} className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}>
                <div className={`flex items-start space-x-2 max-w-[80%] ${message.isBot ? 'flex-row' : 'flex-row-reverse space-x-reverse'}`}>
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${
                    message.isBot 
                      ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white' 
                      : 'bg-gradient-to-r from-orange-500 to-red-500 text-white'
                  }`}>
                    {message.isBot ? <Bot className="h-4 w-4" /> : <User className="h-4 w-4" />}
                  </div>
                  <div>
                    <div className={`p-3 rounded-lg ${
                      message.isBot 
                        ? 'bg-gray-100 text-gray-800' 
                        : 'bg-gradient-to-r from-orange-500 to-red-500 text-white'
                    }`}>
                      <p className="text-sm leading-relaxed">{message.text}</p>
                    </div>
                    {message.suggestions && (
                      <div className="mt-2 space-y-1">
                        {message.suggestions.map((suggestion, index) => (
                          <button
                            key={index}
                            onClick={() => setInput(suggestion)}
                            className="block text-xs text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 px-2 py-1 rounded-md transition-colors mb-1"
                          >
                            {suggestion}
                          </button>
                        ))}
                      </div>
                    )}
                    <p className="text-xs text-gray-500 mt-1">
                      {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                    </p>
                  </div>
                </div>
              </div>
            ))}
            
            {isTyping && (
              <div className="flex justify-start">
                <div className="flex items-start space-x-2">
                  <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                    <Bot className="h-4 w-4 text-white" />
                  </div>
                  <div className="bg-gray-100 p-3 rounded-lg">
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                    </div>
                  </div>
                </div>
              </div>
            )}
            <div ref={messagesEndRef} />
          </div>

          {/* Input */}
          <div className="p-4 border-t border-gray-200">
            <div className="flex items-center space-x-2">
              <input
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                placeholder={currentLanguage === 'en' ? 'Ask about app connections, travel problems, destinations...' : 'рдРрдк рдХрдиреЗрдХреНрд╢рди, рдпрд╛рддреНрд░рд╛ рд╕рдорд╕реНрдпрд╛рдУрдВ, рдЧрдВрддрд╡реНрдпреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...'}
                className="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm"
                onKeyPress={(e) => e.key === 'Enter' && handleSend()}
              />
              <button 
                onClick={handleSend}
                className="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-2 rounded-lg hover:shadow-lg transition-all transform hover:scale-105"
              >
                <Send className="h-4 w-4" />
              </button>
            </div>
          </div>
        </>
      )}
    </div>
  );
}